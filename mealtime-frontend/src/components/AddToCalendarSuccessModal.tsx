// src/components/AddToCalendarSuccessModal.tsx
import React from 'react';
import Portal from './Portal';
import { format } from 'date-fns';
import { ru } from 'date-fns/locale';

interface AddToCalendarSuccessModalProps {
  isOpen: boolean;
  onClose: () => void;
  onContinue: () => void;
  onGoToCalendar: () => void;
  recipeName: string;
  selectedDate: string;
  selectedMealType: string;
  portions: number;
}

const AddToCalendarSuccessModal: React.FC<AddToCalendarSuccessModalProps> = ({
  isOpen,
  onClose,
  onContinue,
  onGoToCalendar,
  recipeName,
  selectedDate,
  selectedMealType,
  portions,
}) => {
  if (!isOpen) return null;

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç–∫–∏ —Ç–∏–ø–∞ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏
  const getMealTypeLabel = (type: string): string => {
    const mealTypes: { [key: string]: string } = {
      breakfast: '‚òÄÔ∏è –ó–∞–≤—Ç—Ä–∞–∫',
      lunch: 'üçΩÔ∏è –û–±–µ–¥',
      dinner: 'üåô –£–∂–∏–Ω',
      snack: 'ü•® –ü–µ—Ä–µ–∫—É—Å',
      supper: 'üçé –ü–æ–∑–¥–Ω–∏–π —É–∂–∏–Ω',
    };
    return mealTypes[type] || type;
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
  const formattedDate = format(new Date(selectedDate), 'd MMMM yyyy', { locale: ru });

  return (
    <Portal>
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50" onClick={onClose}>
        <div className="bg-white rounded-lg shadow-xl max-w-md w-full" onClick={(e) => e.stopPropagation()}>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å primary —Ü–≤–µ—Ç–æ–º */}
          <div className="bg-primary-500 px-6 py-4 border-b border-primary-600 flex justify-between items-center rounded-t-lg">
            <h3 className="text-lg font-semibold text-white">‚úÖ –†–µ—Ü–µ–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å</h3>
            <button
              onClick={onClose}
              className="text-white hover:text-primary-200 text-2xl transition-colors"
            >
              &times;
            </button>
          </div>

          {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
          <div className="p-6">
            <div className="text-center mb-4">
              <div className="w-16 h-16 bg-primary-100 rounded-full flex items-center justify-center mx-auto mb-3">
                <span className="text-2xl text-primary-600">üìÖ</span>
              </div>
              <h4 className="text-xl font-bold text-neutral-900 mb-2">{recipeName}</h4>
              <p className="text-neutral-600">
                —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è
              </p>
            </div>

            <div className="bg-neutral-50 rounded-lg p-4 mb-4 border border-neutral-200">
              <div className="space-y-2 text-sm">
                <div className="flex justify-between">
                  <span className="text-neutral-600">üìÖ –î–∞—Ç–∞:</span>
                  <span className="font-medium text-neutral-900">{formattedDate}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-neutral-600">üçΩÔ∏è –ü—Ä–∏–µ–º –ø–∏—â–∏:</span>
                  <span className="font-medium text-neutral-900">{getMealTypeLabel(selectedMealType)}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-neutral-600">üë• –ü–æ—Ä—Ü–∏–∏:</span>
                  <span className="font-medium text-neutral-900">{portions}</span>
                </div>
              </div>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="bg-neutral-50 px-6 py-4 border-t border-neutral-200 flex flex-col sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-3 rounded-b-lg">
            <button
              onClick={onContinue}
              className="px-4 py-2 bg-white border border-neutral-300 text-neutral-700 rounded-lg font-medium hover:bg-neutral-50 transition-colors order-2 sm:order-1"
            >
              –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä
            </button>
            <button
              onClick={onGoToCalendar}
              className="px-4 py-2 bg-primary-500 text-white rounded-lg font-medium hover:bg-primary-600 transition-colors order-1 sm:order-2"
            >
              –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
            </button>
          </div>
        </div>
      </div>
    </Portal>
  );
};

export default AddToCalendarSuccessModal;