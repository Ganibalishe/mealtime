// RecipeDetailPage.tsx - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { format } from 'date-fns';
import { ru } from 'date-fns/locale';
import { useAuth } from '../hooks/useAuth';
import { recipeService } from '../services/api';
import type { Recipe } from '../types';
import { mealPlanService } from '../services/api';
import SeoHead from '../components/SeoHead';
import AddToCalendarSuccessModal from '../components/AddToCalendarSuccessModal';

const RecipeDetailPage: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();
  const isAuthenticated = useAuth();
  const [recipe, setRecipe] = useState<Recipe | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState('');

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å - —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
  const [showAddToCalendar, setShowAddToCalendar] = useState(false);
  const [selectedDate, setSelectedDate] = useState('');
  const [selectedMealType, setSelectedMealType] = useState('lunch');
  const [portions, setPortions] = useState(2);
  const [showSuccessModal, setShowSuccessModal] = useState(false);


  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const [showAuthModal, setShowAuthModal] = useState(false);

  useEffect(() => {
    const loadRecipe = async () => {
      if (!id) return;

      try {
        setIsLoading(true);
        const response = await recipeService.getById(id);
        setRecipe(response.data);
        setPortions(response.data.portions); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Ä—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ —Ä–µ—Ü–µ–ø—Ç–∞
      } catch (error) {
        setError('–†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        console.error('Error loading recipe:', error);
      } finally {
        setIsLoading(false);
      }
    };

    loadRecipe();
  }, [id]);

  const handleAddToCalendar = async () => {
    if (!recipe || !selectedDate) return;

    try {
      await mealPlanService.addRecipeToDate(selectedDate, selectedMealType, recipe.id, portions);
      setShowSuccessModal(true);
      setShowAddToCalendar(false);
    } catch (error) {
      console.error('Error adding recipe to calendar:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å');
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
  const handleAddToCalendarClick = () => {
    if (!isAuthenticated) {
      setShowAuthModal(true);
    } else {
      setShowAddToCalendar(true);
    }
  };
  const handleContinue = () => {
    setShowSuccessModal(false);
  };

  const handleGoToCalendar = () => {
    setShowSuccessModal(false);
    navigate('/'); // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (–∫–∞–ª–µ–Ω–¥–∞—Ä—å)
  };

  // –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ—Ü–µ–ø—Ç–∞ (JSON-LD)
  const structuredData = recipe ? {
    "@context": "https://schema.org/",
    "@type": "Recipe",
    "name": recipe.name,
    "description": recipe.description || `–†–µ—Ü–µ–ø—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è ${recipe.name}`,
    "prepTime": `PT${recipe.cooking_time}M`,
    "cookTime": `PT${recipe.cooking_time}M`,
    "totalTime": `PT${recipe.cooking_time}M`,
    "recipeYield": `${recipe.portions} –ø–æ—Ä—Ü–∏–π`,
    "recipeCategory": getRecipeCategory(recipe),
    "recipeCuisine": "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è",
    "author": {
      "@type": "Organization",
      "name": "Mealtime Planner"
    },
    "nutrition": {
      "@type": "NutritionInformation",
      "calories": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞"
    },
    "recipeIngredient": recipe.ingredients.map(ingredient =>
      `${ingredient.quantity} ${ingredient.unit_display} ${ingredient.ingredient_name}`
    ),
    "recipeInstructions": recipe.instructions.split('\n')
      .filter(step => step.trim())
      .map((step, index) => ({
        "@type": "HowToStep",
        "position": index + 1,
        "text": step.trim()
      })),
    "aggregateRating": {
      "@type": "AggregateRating",
      "ratingValue": "4.8",
      "ratingCount": "150"
    },
    "image": recipe.image || "/recipe-placeholder.jpg"
  } : null;

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞
  function getRecipeCategory(recipe: Recipe): string {
    const tags = recipe.tags.map(tag => tag.name.toLowerCase());

    if (tags.includes('–∑–∞–≤—Ç—Ä–∞–∫')) return '–ó–∞–≤—Ç—Ä–∞–∫';
    if (tags.includes('–æ–±–µ–¥')) return '–û–±–µ–¥';
    if (tags.includes('—É–∂–∏–Ω')) return '–£–∂–∏–Ω';
    if (tags.includes('—Å—É–ø')) return '–°—É–ø';
    if (tags.includes('–¥–µ—Å–µ—Ä—Ç')) return '–î–µ—Å–µ—Ä—Ç';
    if (tags.includes('–ø–µ—Ä–µ–∫—É—Å')) return '–ü–µ—Ä–µ–∫—É—Å';

    return '–û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ';
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è SEO —Ç–µ–∫—Å—Ç–∞
  const getMealTypeSuggestion = (recipe: Recipe): string => {
    const tags = recipe.tags.map(tag => tag.name.toLowerCase());

    if (tags.includes('–∑–∞–≤—Ç—Ä–∞–∫')) return '–∑–∞–≤—Ç—Ä–∞–∫–∞';
    if (tags.includes('–æ–±–µ–¥')) return '–æ–±–µ–¥–∞';
    if (tags.includes('—É–∂–∏–Ω')) return '—É–∂–∏–Ω–∞';
    if (tags.includes('–ø–µ—Ä–µ–∫—É—Å')) return '–ø–µ—Ä–µ–∫—É—Å–∞';

    return '–ª—é–±–æ–≥–æ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏';
  };

  const mealTypes = [
    { value: 'breakfast', label: '‚òÄÔ∏è –ó–∞–≤—Ç—Ä–∞–∫' },
    { value: 'lunch', label: 'üçΩÔ∏è –û–±–µ–¥' },
    { value: 'dinner', label: 'üåô –£–∂–∏–Ω' },
    { value: 'snack', label: 'ü•® –ü–µ—Ä–µ–∫—É—Å' },
    { value: 'supper', label: 'üçé –ü–æ–∑–¥–Ω–∏–π —É–∂–∏–Ω' },
  ];

  if (isLoading) {
    return (
      <div className="flex justify-center items-center py-12">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-500"></div>
      </div>
    );
  }

  if (error || !recipe) {
    return (
      <div className="text-center py-12">
        <div className="text-red-600 bg-red-50 rounded-lg p-4 max-w-md mx-auto">
          {error || '–†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'}
        </div>
        <button
          onClick={() => navigate('/recipes')}
          className="btn-primary mt-4"
        >
          –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–µ—Ü–µ–ø—Ç–∞–º
        </button>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto">
      {/* SEO –ö–û–ú–ü–û–ù–ï–ù–¢ */}
      <SeoHead
        title={`${recipe.name} - –ü–æ–¥—Ä–æ–±–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç —Å –ø–æ—à–∞–≥–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏`}
        description={recipe.description || `–†–µ—Ü–µ–ø—Ç ${recipe.name}. –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: ${recipe.cooking_time} –º–∏–Ω—É—Ç, —Å–ª–æ–∂–Ω–æ—Å—Ç—å: ${recipe.difficulty_display}. –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: ${recipe.ingredients.slice(0, 3).map(i => i.ingredient_name).join(', ')}`}
        keywords={`—Ä–µ—Ü–µ–ø—Ç ${recipe.name}, ${recipe.ingredients.map(i => i.ingredient_name).join(', ')}, –≥–æ—Ç–æ–≤–∫–∞, –∫—É–ª–∏–Ω–∞—Ä–∏—è, ${recipe.difficulty_display.toLowerCase()}, ${recipe.cooking_time} –º–∏–Ω—É—Ç`}
        structuredData={structuredData || undefined}
      />

      {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ */}
      <nav className="mb-6">
        <button
          onClick={() => navigate('/recipes')}
          className="text-primary-600 hover:text-primary-700 font-medium"
        >
          ‚Üê –ù–∞–∑–∞–¥ –∫ —Ä–µ—Ü–µ–ø—Ç–∞–º
        </button>
      </nav>

      <div className="bg-white rounded-lg shadow-sm overflow-hidden">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è */}
        <div className="bg-gray-50 px-6 py-4 border-b">
          <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
            <div>
              <h2 className="text-2xl sm:text-3xl font-bold text-gray-900">{recipe.name}</h2>
              <p className="text-gray-600 mt-1">{recipe.description}</p>
            </div>
            <button
              onClick={handleAddToCalendarClick}
              className="btn-primary whitespace-nowrap"
            >
              üìÖ {isAuthenticated ? '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å' : '–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á—Ç–æ–± –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç –≤ –ø–ª–∞–Ω'}
            </button>
          </div>
        </div>

        <div className="p-6">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="lg:col-span-2">
              {/* –ú–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="grid grid-cols-2 sm:grid-cols-4 gap-4 mb-6">
                <div className="bg-gray-50 rounded-lg p-4 text-center">
                  <div className="text-sm text-gray-500">–í—Ä–µ–º—è</div>
                  <div className="font-semibold text-lg">
                    {recipe.cooking_time ? `${recipe.cooking_time} –º–∏–Ω` : '‚Äî'}
                  </div>
                </div>
                <div className="bg-gray-50 rounded-lg p-4 text-center">
                  <div className="text-sm text-gray-500">–°–ª–æ–∂–Ω–æ—Å—Ç—å</div>
                  <div className="font-semibold text-lg">{recipe.difficulty_display}</div>
                </div>
                <div className="bg-gray-50 rounded-lg p-4 text-center">
                  <div className="text-sm text-gray-500">–ü–æ—Ä—Ü–∏–π</div>
                  <div className="font-semibold text-lg">{recipe.portions}</div>
                </div>
                <div className="bg-gray-50 rounded-lg p-4 text-center">
                  <div className="text-sm text-gray-500">–°–ø–æ—Å–æ–±</div>
                  <div className="font-semibold text-lg">{recipe.cooking_method_name || '‚Äî'}</div>
                </div>
              </div>

              {/* –¢–µ–≥–∏ —Ä–µ—Ü–µ–ø—Ç–∞ */}
              {recipe.tags && recipe.tags.length > 0 && (
                <div className="mb-6">
                  <h3 className="text-lg font-semibold text-gray-900 mb-3">–¢–µ–≥–∏ —Ä–µ—Ü–µ–ø—Ç–∞</h3>
                  <div className="flex flex-wrap gap-2">
                    {recipe.tags.map(tag => (
                      <span
                        key={tag.id}
                        className="px-3 py-1 rounded-full text-sm font-medium text-white"
                        style={{ backgroundColor: tag.color || '#6B7280' }}
                      >
                        {tag.name}
                      </span>
                    ))}
                  </div>
                </div>
              )}

              {/* –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã */}
              <div className="mb-8">
                <h3 className="text-xl font-bold text-gray-900 mb-4">–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</h3>
                <div className="bg-gray-50 rounded-lg p-4">
                  <div className="space-y-2">
                    {recipe.ingredients.map((ingredient, index) => (
                      <div key={index} className="flex justify-between items-center py-2 border-b border-gray-200 last:border-b-0">
                        <span className="font-medium">{ingredient.ingredient_name}</span>
                        <span className="text-gray-600">
                          {ingredient.quantity} {ingredient.unit_display}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
              </div>

              {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
              <div>
                <h3 className="text-xl font-bold text-gray-900 mb-4">–°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è</h3>
                <div className="prose max-w-none">
                  {recipe.instructions.split('\n').map((paragraph, index) => (
                    paragraph.trim() && (
                      <div key={index} className="mb-4">
                        <div className="flex items-start">
                          <span className="bg-primary-500 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm font-bold mr-3 mt-1 flex-shrink-0">
                            {index + 1}
                          </span>
                          <p className="text-gray-700 leading-relaxed">
                            {paragraph}
                          </p>
                        </div>
                      </div>
                    )
                  ))}
                </div>
              </div>
            </div>

            {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å) */}
            <div className="lg:col-span-1">
              {recipe.image ? (
                <div className="bg-gray-100 rounded-lg p-4">
                  <img
                    src={recipe.image}
                    alt={recipe.name}
                    className="w-full h-64 object-cover rounded-lg"
                  />
                </div>
              ) : (
                <div className="bg-gray-100 rounded-lg p-8 text-center">
                  <div className="text-6xl mb-4">üç≥</div>
                  <p className="text-gray-500">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</p>
                </div>
              )}

              {/* –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="mt-6 bg-primary-50 rounded-lg p-4">
                <h4 className="font-semibold text-gray-900 mb-3">üìä –ü–∏—â–µ–≤–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å</h4>
                <div className="space-y-2 text-sm text-gray-700">
                  <p>‚Ä¢ <strong>–í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:</strong> {recipe.cooking_time} –º–∏–Ω—É—Ç</p>
                  <p>‚Ä¢ <strong>–°–ª–æ–∂–Ω–æ—Å—Ç—å:</strong> {recipe.difficulty_display.toLowerCase()}</p>
                  <p>‚Ä¢ <strong>–ü–æ—Ä—Ü–∏–π:</strong> {recipe.portions}</p>
                  <p>‚Ä¢ <strong>–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è:</strong> {getMealTypeSuggestion(recipe)}</p>
                </div>
              </div>

              {/* –ë–ª–æ–∫ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
              {!isAuthenticated && (
                <div className="mt-6 bg-accent-50 rounded-lg p-4 border border-accent-200">
                  <h4 className="font-semibold text-gray-900 mb-3">üîê –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Ä–µ—Ü–µ–ø—Ç –≤ —Å–≤–æ–π –ø–ª–∞–Ω?</h4>
                  <p className="text-sm text-gray-600 mb-4">
                    –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–ª—è—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø–∏—Ç–∞–Ω–∏—è –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–∫–∏ –ø–æ–∫—É–ø–æ–∫.
                  </p>
                  <div className="flex flex-col gap-2">
                    <button
                      onClick={() => navigate('/register')}
                      className="bg-accent-500 text-white px-4 py-2 rounded-lg text-sm font-medium hover:bg-accent-600 transition-colors"
                    >
                      –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                    </button>
                    <button
                      onClick={() => navigate('/login')}
                      className="bg-white text-accent-600 border border-accent-500 px-4 py-2 rounded-lg text-sm font-medium hover:bg-accent-50 transition-colors"
                    >
                      –í–æ–π—Ç–∏
                    </button>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* SEO –ë–õ–û–ö –° –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ô –ò–ù–§–û–†–ú–ê–¶–ò–ï–ô */}
      <div className="mt-12 bg-white rounded-lg p-6 border border-gray-200">
        <h2 className="text-xl font-bold text-gray-900 mb-4">–û —Ä–µ—Ü–µ–ø—Ç–µ "{recipe.name}"</h2>
        <div className="prose max-w-none text-gray-700">
          <p className="mb-4">
            –†–µ—Ü–µ–ø—Ç "<strong>{recipe.name}</strong>" - —ç—Ç–æ {recipe.difficulty_display.toLowerCase()} –≤ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–∏ –±–ª—é–¥–æ,
            –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ <strong>{recipe.cooking_time} –º–∏–Ω—É—Ç</strong> –≤–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
            –ë–ª—é–¥–æ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–æ –Ω–∞ <strong>{recipe.portions} –ø–æ—Ä—Ü–∏–π</strong> –∏ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è {getMealTypeSuggestion(recipe)}.
          </p>

          <h3 className="text-lg font-semibold mt-6 mb-3">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —ç—Ç–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞:</h3>
          <ul className="list-disc list-inside space-y-2 mb-4">
            <li><strong>–°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:</strong> {recipe.cooking_method_name || '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π'}</li>
            <li><strong>–°–ª–æ–∂–Ω–æ—Å—Ç—å:</strong> {recipe.difficulty_display} - –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è {recipe.difficulty === 'easy' ? '–Ω–∞—á–∏–Ω–∞—é—â–∏—Ö' : recipe.difficulty === 'medium' ? '–æ–ø—ã—Ç–Ω—ã—Ö' : '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤'}</li>
            <li><strong>–û—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:</strong> {recipe.ingredients.slice(0, 4).map(i => i.ingredient_name).join(', ')}</li>
            {recipe.tags.length > 0 && (
              <li><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:</strong> {recipe.tags.map(tag => tag.name).join(', ')}</li>
            )}
          </ul>

          <h3 className="text-lg font-semibold mt-6 mb-3">–°–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é:</h3>
          <ul className="list-disc list-inside space-y-2 mb-4">
            <li>–¢—â–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –≥–æ—Ç–æ–≤–∫–∏</li>
            <li>–°–ª–µ–¥—É–π—Ç–µ –ø–æ—à–∞–≥–æ–≤—ã–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</li>
            <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–µ–∂–∏–µ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã</li>
            <li>–ù–µ –±–æ–π—Ç–µ—Å—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ —Å–ø–µ—Ü–∏—è–º–∏ –ø–æ —Å–≤–æ–µ–º—É –≤–∫—É—Å—É</li>
          </ul>

          <h3 className="text-lg font-semibold mt-6 mb-3">–ü–æ–ª—å–∑–∞ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è:</h3>
          <p className="mb-4">
            –≠—Ç–æ—Ç —Ä–µ—Ü–µ–ø—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤.
            {recipe.ingredients.some(i => i.ingredient_name.toLowerCase().includes('–æ–≤–æ—â')) && ' –û–≤–æ—â–∏ –≤ —Å–æ—Å—Ç–∞–≤–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –æ—Ä–≥–∞–Ω–∏–∑–º –≤–∏—Ç–∞–º–∏–Ω–∞–º–∏ –∏ –∫–ª–µ—Ç—á–∞—Ç–∫–æ–π.'}
            {recipe.ingredients.some(i => i.ingredient_name.toLowerCase().includes('–º—è—Å–æ') || i.ingredient_name.toLowerCase().includes('–∫—É—Ä–∏')) && ' –ë–µ–ª–∫–æ–≤—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç –Ω–∞—Å—ã—â–µ–Ω–∏—é –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –º—ã—à—Ü.'}
            {recipe.ingredients.some(i => i.ingredient_name.toLowerCase().includes('–∑–µ—Ä–Ω') || i.ingredient_name.toLowerCase().includes('–∫—Ä—É–ø')) && ' –ó–µ—Ä–Ω–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã —è–≤–ª—è—é—Ç—Å—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º —Å–ª–æ–∂–Ω—ã—Ö —É–≥–ª–µ–≤–æ–¥–æ–≤ –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏.'}
          </p>

          <div className="bg-gray-50 p-4 rounded-lg mt-6">
            <p className="text-gray-600 text-sm">
              <strong>üí° –ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π —Å–æ–≤–µ—Ç:</strong> –≠—Ç–æ—Ç —Ä–µ—Ü–µ–ø—Ç –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è.
              –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –ª—é–±–∏–º—ã–µ —Å–ø–µ—Ü–∏–∏ –∏–ª–∏ –∑–∞–º–µ–Ω—è—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–∞ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ –ø–æ —Å–≤–æ–µ–º—É –≤–∫—É—Å—É.
            </p>
          </div>

          <p className="mt-4 text-sm text-gray-600">
            –≠—Ç–æ—Ç —Ä–µ—Ü–µ–ø—Ç —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mealtime Planner - —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∏—Ç–∞–Ω–∏—è
            –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–æ–≤ –ø–æ–∫—É–ø–æ–∫. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ —Å–≤–æ–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è, —á—Ç–æ–±—ã
            –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫.
          </p>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö) */}
      {isAuthenticated && showAddToCalendar && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full">
            <div className="bg-gray-50 px-6 py-4 border-b">
              <h3 className="text-lg font-semibold text-gray-900">
                –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å
              </h3>
            </div>

            <div className="p-6 space-y-4">
              {/* –í—ã–±–æ—Ä –¥–∞—Ç—ã */}
              <div>
                <label htmlFor="date" className="block text-sm font-medium text-gray-700 mb-2">
                  –î–∞—Ç–∞:
                </label>
                <input
                  id="date"
                  type="date"
                  value={selectedDate}
                  onChange={(e) => setSelectedDate(e.target.value)}
                  className="input-field"
                  min={new Date().toISOString().split('T')[0]}
                  required
                />
              </div>

              {/* –í—ã–±–æ—Ä –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ */}
              <div>
                <label htmlFor="mealType" className="block text-sm font-medium text-gray-700 mb-2">
                  –ü—Ä–∏–µ–º –ø–∏—â–∏:
                </label>
                <select
                  id="mealType"
                  value={selectedMealType}
                  onChange={(e) => setSelectedMealType(e.target.value)}
                  className="input-field"
                >
                  {mealTypes.map(meal => (
                    <option key={meal.value} value={meal.value}>
                      {meal.label}
                    </option>
                  ))}
                </select>
              </div>

              {/* –í—ã–±–æ—Ä –ø–æ—Ä—Ü–∏–π */}
              <div>
                <label htmlFor="portions" className="block text-sm font-medium text-gray-700 mb-2">
                  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π:
                </label>
                <div className="flex items-center space-x-4">
                  <button
                    type="button"
                    onClick={() => setPortions(Math.max(1, portions - 1))}
                    className="w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center hover:bg-gray-300"
                  >
                    -
                  </button>

                  <input
                    id="portions"
                    type="number"
                    min="1"
                    max="20"
                    value={portions}
                    onChange={(e) => setPortions(Math.max(1, parseInt(e.target.value) || 1))}
                    className="w-20 text-center border border-gray-300 rounded-lg py-2 px-3"
                  />

                  <button
                    type="button"
                    onClick={() => setPortions(Math.min(20, portions + 1))}
                    className="w-10 h-10 rounded-full bg-gray-200 flex items-center justify-center hover:bg-gray-300"
                  >
                    +
                  </button>
                </div>
              </div>
            </div>

            <div className="bg-gray-50 px-6 py-4 border-t flex justify-end space-x-3">
              <button
                onClick={() => setShowAddToCalendar(false)}
                className="btn-secondary"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                onClick={handleAddToCalendar}
                disabled={!selectedDate}
                className="btn-primary disabled:opacity-50"
              >
                –î–æ–±–∞–≤–∏—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö */}
      {showAuthModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full">
            <div className="bg-primary-500 text-white px-6 py-4 rounded-t-lg">
              <h3 className="text-lg font-semibold">
                üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ç—Ä–µ–±—É–µ—Ç—Å—è
              </h3>
            </div>

            <div className="p-6">
              <p className="text-gray-600 mb-6">
                –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç "{recipe.name}" –≤ —Å–≤–æ–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è.
                –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç –≤–∞–º:
              </p>

              <ul className="space-y-2 mb-6">
                <li className="flex items-center text-sm text-gray-600">
                  <span className="text-green-500 mr-2">‚úì</span>
                  –°–æ–∑–¥–∞–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è
                </li>
                <li className="flex items-center text-sm text-gray-600">
                  <span className="text-green-500 mr-2">‚úì</span>
                  –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–∫–∏ –ø–æ–∫—É–ø–æ–∫
                </li>
                <li className="flex items-center text-sm text-gray-600">
                  <span className="text-green-500 mr-2">‚úì</span>
                  –°–æ—Ö—Ä–∞–Ω—è—Ç—å –ª—é–±–∏–º—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã
                </li>
                <li className="flex items-center text-sm text-gray-600">
                  <span className="text-green-500 mr-2">‚úì</span>
                  –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–∫—É–ø–æ–∫
                </li>
              </ul>

              <div className="flex flex-col gap-3">
                <button
                  onClick={() => {
                    setShowAuthModal(false);
                    navigate('/register');
                  }}
                  className="bg-primary-500 text-white px-4 py-3 rounded-lg font-semibold hover:bg-primary-600 transition-colors"
                >
                  –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                </button>
                <button
                  onClick={() => {
                    setShowAuthModal(false);
                    navigate('/login');
                  }}
                  className="bg-white text-primary-600 border border-primary-500 px-4 py-3 rounded-lg font-semibold hover:bg-primary-50 transition-colors"
                >
                  –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
                </button>
              </div>
            </div>

            <div className="bg-gray-50 px-6 py-4 border-t rounded-b-lg flex justify-end">
              <button
                onClick={() => setShowAuthModal(false)}
                className="text-gray-600 hover:text-gray-800 text-sm"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
            </div>
          </div>
        </div>
      )}
      <AddToCalendarSuccessModal
        isOpen={showSuccessModal}
        onClose={handleContinue}
        onContinue={handleContinue}
        onGoToCalendar={handleGoToCalendar}
        recipeName={recipe?.name || ''}
        selectedDate={selectedDate}
        selectedMealType={selectedMealType}
        portions={portions}
      />
    </div>
  );
};

export default RecipeDetailPage;