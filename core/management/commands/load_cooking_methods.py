
import os
from django.core.management.base import BaseCommand
from django.db import transaction
from core.models import CookingMethod

class Command(BaseCommand):
    help = 'Load cooking methods into database'

    def handle(self, *args, **options):
        cooking_methods_data = [
            "–í–∞—Ä–∫–∞",
            "–ñ–∞—Ä–∫–∞",
            "–ó–∞–ø–µ–∫–∞–Ω–∏–µ",
            "–¢—É—à–µ–Ω–∏–µ",
            "–ì—Ä–∏–ª—å",
            "–ü–∞—Ä–æ–≤–∞—Ä–∫–∞",
            "–ú–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∞—è –ø–µ—á—å",
            "–°—ã—Ä–æ–µ–¥–µ–Ω–∏–µ",
            "–ö–æ–ø—á–µ–Ω–∏–µ",
            "–í–∞—Ä–∫–∞ –Ω–∞ –ø–∞—Ä—É",
            "–ë–ª–∞–Ω—à–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "–ú–∞—Ä–∏–Ω–æ–≤–∞–Ω–∏–µ",
            "–§—Ä–∏—Ç—é—Ä",
            "–ü—Ä–∏–ø—É—Å–∫–∞–Ω–∏–µ",
            "–ü–∞—Å—Å–µ—Ä–æ–≤–∞–Ω–∏–µ",
            "–ö–æ–Ω—Å–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "–°—É—à–∫–∞",
            "–í—è–ª–µ–Ω–∏–µ",
            "–§–µ—Ä–º–µ–Ω—Ç–∞—Ü–∏—è",
            "–°–æ–ª–µ–Ω–∏–µ",
            "–ö–≤–∞—à–µ–Ω–∏–µ",
            "–ó–∞–º–æ—Ä–∞–∂–∏–≤–∞–Ω–∏–µ",
            "–†–∞–∑–æ–≥—Ä–µ–≤",
            "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤ –º—É–ª—å—Ç–∏–≤–∞—Ä–∫–µ",
            "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤ –∞—ç—Ä–æ–≥—Ä–∏–ª–µ",
            "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤ –¥—É—Ö–æ–≤–∫–µ",
            "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–∞–Ω–≥–∞–ª–µ",
            "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∫–æ–≤–æ—Ä–æ–¥–µ-–≥—Ä–∏–ª—å",
            "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤ –∫–∞–∑–∞–Ω–µ",
            "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –≤ –≥–æ—Ä—à–æ—á–∫–∞—Ö"
        ]

        created_count = 0
        existing_count = 0

        with transaction.atomic():
            for method_name in cooking_methods_data:
                method, created = CookingMethod.objects.get_or_create(
                    name=method_name
                )

                if created:
                    self.stdout.write(
                        self.style.SUCCESS(f'‚úÖ –°–æ–∑–¥–∞–Ω –º–µ—Ç–æ–¥: {method_name}')
                    )
                    created_count += 1
                else:
                    self.stdout.write(
                        self.style.NOTICE(f'üìÅ –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {method_name}')
                    )
                    existing_count += 1

        self.stdout.write(
            self.style.SUCCESS(
                f'\nüéâ –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω–æ: {created_count}, –°—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ: {existing_count}, –í—Å–µ–≥–æ: {created_count + existing_count}'
            )
        )

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
        self.stdout.write("\nüç≥ –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –º–µ—Ç–æ–¥–æ–≤ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:")
        for method in CookingMethod.objects.all().order_by('name'):
            self.stdout.write(f'  - {method.name}')