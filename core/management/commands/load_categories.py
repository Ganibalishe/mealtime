# management/commands/load_categories.py
import os
from django.core.management.base import BaseCommand
from django.db import transaction
from core.models import IngredientCategory

class Command(BaseCommand):
    help = 'Load ingredient categories into database'

    def handle(self, *args, **options):
        categories_data = [
            {"name": "–û–≤–æ—â–∏ –∏ –∑–µ–ª–µ–Ω—å", "order": 1},
            {"name": "–§—Ä—É–∫—Ç—ã –∏ —è–≥–æ–¥—ã", "order": 2},
            {"name": "–ú—è—Å–æ –∏ –ø—Ç–∏—Ü–∞", "order": 3},
            {"name": "–†—ã–±–∞ –∏ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã", "order": 4},
            {"name": "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã", "order": 5},
            {"name": "–Ø–π—Ü–∞", "order": 6},
            {"name": "–°—ã—Ä—ã", "order": 7},
            {"name": "–ö–æ–ª–±–∞—Å—ã –∏ —Å–æ—Å–∏—Å–∫–∏", "order": 8},
            {"name": "–•–ª–µ–± –∏ –≤—ã–ø–µ—á–∫–∞", "order": 9},
            {"name": "–ö—Ä—É–ø—ã –∏ –º–∞–∫–∞—Ä–æ–Ω—ã", "order": 10},
            {"name": "–ë–æ–±–æ–≤—ã–µ", "order": 11},
            {"name": "–ú—É–∫–∞ –∏ —Å–º–µ—Å–∏", "order": 12},
            {"name": "–ú–∞—Å–ª–∞ –∏ –∂–∏—Ä—ã", "order": 13},
            {"name": "–°–æ—É—Å—ã –∏ –ø—Ä–∏–ø—Ä–∞–≤—ã", "order": 14},
            {"name": "–°–ø–µ—Ü–∏–∏ –∏ —Ç—Ä–∞–≤—ã", "order": 15},
            {"name": "–û—Ä–µ—Ö–∏ –∏ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç—ã", "order": 16},
            {"name": "–ö–æ–Ω—Å–µ—Ä–≤—ã", "order": 17},
            {"name": "–ß–∞–π –∏ –∫–æ—Ñ–µ", "order": 18},
            {"name": "–ù–∞–ø–∏—Ç–∫–∏", "order": 19},
            {"name": "–°–ª–∞–¥–æ—Å—Ç–∏", "order": 20},
            {"name": "–ó–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã", "order": 21},
            {"name": "–ë–∞–∫–∞–ª–µ—è", "order": 22},
            {"name": "–ü—Ä–æ—á–µ–µ", "order": 99},
        ]

        created_count = 0
        existing_count = 0

        with transaction.atomic():
            for cat_data in categories_data:
                category, created = IngredientCategory.objects.get_or_create(
                    name=cat_data["name"],
                    defaults={"order": cat_data["order"]}
                )

                if created:
                    self.stdout.write(
                        self.style.SUCCESS(f'‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {cat_data["name"]}')
                    )
                    created_count += 1
                else:
                    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫, –µ—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    if category.order != cat_data["order"]:
                        category.order = cat_data["order"]
                        category.save()
                        self.stdout.write(
                            self.style.WARNING(f'üîÑ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Ä—è–¥–æ–∫: {cat_data["name"]} ‚Üí {cat_data["order"]}')
                        )
                    else:
                        self.stdout.write(
                            self.style.NOTICE(f'üìÅ –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {cat_data["name"]}')
                        )
                    existing_count += 1

        self.stdout.write(
            self.style.SUCCESS(
                f'\nüéâ –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω–æ: {created_count}, –°—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ: {existing_count}, –í—Å–µ–≥–æ: {created_count + existing_count}'
            )
        )

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
        self.stdout.write("\nüìã –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:")
        for category in IngredientCategory.objects.all().order_by('order'):
            self.stdout.write(f'  {category.order:2d}. {category.name}')