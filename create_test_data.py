import os
import django
from datetime import date, timedelta
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "mealtime_backend.settings")
django.setup()

from django.contrib.auth.models import User
from core.models import (
    IngredientCategory,
    CookingMethod,
    Ingredient,
    Recipe,
    RecipeIngredient,
    MealPlan,
    RecipeMealPlan,
    ShoppingList,
    ShoppingListItem,
    ShoppingListTemplate,
    TemplateItem,
)


def create_test_data():
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")

    # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, created = User.objects.get_or_create(
        username="testuser",
        defaults={
            "email": "test@example.com",
            "first_name": "–¢–µ—Å—Ç–æ–≤—ã–π",
            "last_name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        },
    )
    if created:
        user.set_password("testpassword123")
        user.save()
        print("‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
    else:
        print("‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

    # 2. –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
    categories_data = [
        {"name": "–û–≤–æ—â–∏", "order": 1},
        {"name": "–§—Ä—É–∫—Ç—ã", "order": 2},
        {"name": "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã", "order": 3},
        {"name": "–ú—è—Å–æ –∏ –ø—Ç–∏—Ü–∞", "order": 4},
        {"name": "–†—ã–±–∞ –∏ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã", "order": 5},
        {"name": "–ö—Ä—É–ø—ã –∏ –º–∞–∫–∞—Ä–æ–Ω—ã", "order": 6},
        {"name": "–°–ø–µ—Ü–∏–∏ –∏ –ø—Ä–∏–ø—Ä–∞–≤—ã", "order": 7},
        {"name": "–ú—É–∫–∞ –∏ –≤—ã–ø–µ—á–∫–∞", "order": 8},
        {"name": "–ù–∞–ø–∏—Ç–∫–∏", "order": 9},
        {"name": "–ü—Ä–æ—á–µ–µ", "order": 10},
    ]

    categories = {}
    for cat_data in categories_data:
        category, created = IngredientCategory.objects.get_or_create(
            name=cat_data["name"], defaults={"order": cat_data["order"]}
        )
        categories[cat_data["name"]] = category
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {cat_data['name']}")

    # 3. –°–æ–∑–¥–∞–µ–º —Å–ø–æ—Å–æ–±—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è
    cooking_methods_data = [
        "–í–∞—Ä–∫–∞",
        "–ñ–∞—Ä–∫–∞",
        "–¢—É—à–µ–Ω–∏–µ",
        "–ó–∞–ø–µ–∫–∞–Ω–∏–µ",
        "–ì—Ä–∏–ª—å",
        "–ù–∞ –ø–∞—Ä—É",
        "–°—ã—Ä–æ–µ–¥–µ–Ω–∏–µ",
    ]

    cooking_methods = {}
    for method_name in cooking_methods_data:
        method, created = CookingMethod.objects.get_or_create(name=method_name)
        cooking_methods[method_name] = method
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Å–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {method_name}")

    # 4. –°–æ–∑–¥–∞–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
    ingredients_data = [
        # –û–≤–æ—â–∏
        {"name": "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", "category": "–û–≤–æ—â–∏", "unit": "pcs"},
        {"name": "–ú–æ—Ä–∫–æ–≤—å", "category": "–û–≤–æ—â–∏", "unit": "pcs"},
        {"name": "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "category": "–û–≤–æ—â–∏", "unit": "pcs"},
        {"name": "–ü–æ–º–∏–¥–æ—Ä—ã", "category": "–û–≤–æ—â–∏", "unit": "pcs"},
        {"name": "–û–≥—É—Ä—Ü—ã", "category": "–û–≤–æ—â–∏", "unit": "pcs"},
        {"name": "–ö–∞–ø—É—Å—Ç–∞ –±–µ–ª–æ–∫–æ—á–∞–Ω–Ω–∞—è", "category": "–û–≤–æ—â–∏", "unit": "pcs"},
        {"name": "–ß–µ—Å–Ω–æ–∫", "category": "–û–≤–æ—â–∏", "unit": "pcs"},
        {"name": "–ü–µ—Ä–µ—Ü –±–æ–ª–≥–∞—Ä—Å–∫–∏–π", "category": "–û–≤–æ—â–∏", "unit": "pcs"},
        # –§—Ä—É–∫—Ç—ã
        {"name": "–Ø–±–ª–æ–∫–∏", "category": "–§—Ä—É–∫—Ç—ã", "unit": "pcs"},
        {"name": "–ë–∞–Ω–∞–Ω—ã", "category": "–§—Ä—É–∫—Ç—ã", "unit": "pcs"},
        {"name": "–ê–ø–µ–ª—å—Å–∏–Ω—ã", "category": "–§—Ä—É–∫—Ç—ã", "unit": "pcs"},
        # –ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
        {"name": "–ú–æ–ª–æ–∫–æ", "category": "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã", "unit": "ml"},
        {"name": "–°–º–µ—Ç–∞–Ω–∞", "category": "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã", "unit": "g"},
        {"name": "–°—ã—Ä", "category": "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã", "unit": "g"},
        {"name": "–¢–≤–æ—Ä–æ–≥", "category": "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã", "unit": "g"},
        {"name": "–ô–æ–≥—É—Ä—Ç", "category": "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã", "unit": "g"},
        # –ú—è—Å–æ –∏ –ø—Ç–∏—Ü–∞
        {"name": "–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ", "category": "–ú—è—Å–æ –∏ –ø—Ç–∏—Ü–∞", "unit": "g"},
        {"name": "–ì–æ–≤—è–¥–∏–Ω–∞", "category": "–ú—è—Å–æ –∏ –ø—Ç–∏—Ü–∞", "unit": "g"},
        {"name": "–°–≤–∏–Ω–∏–Ω–∞", "category": "–ú—è—Å–æ –∏ –ø—Ç–∏—Ü–∞", "unit": "g"},
        {"name": "–§–∞—Ä—à –º—è—Å–Ω–æ–π", "category": "–ú—è—Å–æ –∏ –ø—Ç–∏—Ü–∞", "unit": "g"},
        # –ö—Ä—É–ø—ã –∏ –º–∞–∫–∞—Ä–æ–Ω—ã
        {"name": "–†–∏—Å", "category": "–ö—Ä—É–ø—ã –∏ –º–∞–∫–∞—Ä–æ–Ω—ã", "unit": "g"},
        {"name": "–ì—Ä–µ—á–∫–∞", "category": "–ö—Ä—É–ø—ã –∏ –º–∞–∫–∞—Ä–æ–Ω—ã", "unit": "g"},
        {"name": "–ú–∞–∫–∞—Ä–æ–Ω—ã", "category": "–ö—Ä—É–ø—ã –∏ –º–∞–∫–∞—Ä–æ–Ω—ã", "unit": "g"},
        {"name": "–û–≤—Å—è–Ω—ã–µ —Ö–ª–æ–ø—å—è", "category": "–ö—Ä—É–ø—ã –∏ –º–∞–∫–∞—Ä–æ–Ω—ã", "unit": "g"},
        # –°–ø–µ—Ü–∏–∏ –∏ –ø—Ä–∏–ø—Ä–∞–≤—ã
        {"name": "–°–æ–ª—å", "category": "–°–ø–µ—Ü–∏–∏ –∏ –ø—Ä–∏–ø—Ä–∞–≤—ã", "unit": "tsp"},
        {"name": "–ü–µ—Ä–µ—Ü —á–µ—Ä–Ω—ã–π", "category": "–°–ø–µ—Ü–∏–∏ –∏ –ø—Ä–∏–ø—Ä–∞–≤—ã", "unit": "tsp"},
        {"name": "–õ–∞–≤—Ä–æ–≤—ã–π –ª–∏—Å—Ç", "category": "–°–ø–µ—Ü–∏–∏ –∏ –ø—Ä–∏–ø—Ä–∞–≤—ã", "unit": "pcs"},
        {"name": "–°–∞—Ö–∞—Ä", "category": "–°–ø–µ—Ü–∏–∏ –∏ –ø—Ä–∏–ø—Ä–∞–≤—ã", "unit": "g"},
        # –ú—É–∫–∞ –∏ –≤—ã–ø–µ—á–∫–∞
        {"name": "–ú—É–∫–∞ –ø—à–µ–Ω–∏—á–Ω–∞—è", "category": "–ú—É–∫–∞ –∏ –≤—ã–ø–µ—á–∫–∞", "unit": "g"},
        {"name": "–Ø–π—Ü–∞", "category": "–ú—É–∫–∞ –∏ –≤—ã–ø–µ—á–∫–∞", "unit": "pcs"},
        {"name": "–î—Ä–æ–∂–∂–∏", "category": "–ú—É–∫–∞ –∏ –≤—ã–ø–µ—á–∫–∞", "unit": "g"},
        # –ù–∞–ø–∏—Ç–∫–∏
        {"name": "–ß–∞–π", "category": "–ù–∞–ø–∏—Ç–∫–∏", "unit": "tsp"},
        {"name": "–ö–æ—Ñ–µ", "category": "–ù–∞–ø–∏—Ç–∫–∏", "unit": "g"},
    ]

    ingredients = {}
    for ing_data in ingredients_data:
        ingredient, created = Ingredient.objects.get_or_create(
            name=ing_data["name"],
            defaults={
                "category": categories[ing_data["category"]],
                "default_unit": ing_data["unit"],
            },
        )
        ingredients[ing_data["name"]] = ingredient
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç: {ing_data['name']}")

    # 5. –°–æ–∑–¥–∞–µ–º —Ä–µ—Ü–µ–ø—Ç—ã
    recipes_data = [
        {
            "name": "–û–º–ª–µ—Ç —Å –æ–≤–æ—â–∞–º–∏",
            "description": "–ü–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫ —Å —Å–≤–µ–∂–∏–º–∏ –æ–≤–æ—â–∞–º–∏",
            "cooking_time": 15,
            "difficulty": "easy",
            "cooking_method": "–ñ–∞—Ä–∫–∞",
            "instructions": "1. –ù–∞—Ä–µ–∑–∞—Ç—å –æ–≤–æ—â–∏\n2. –í–∑–±–∏—Ç—å —è–π—Ü–∞\n3. –û–±–∂–∞—Ä–∏—Ç—å –æ–≤–æ—â–∏\n4. –ó–∞–ª–∏—Ç—å —è–π—Ü–∞–º–∏ –∏ –∂–∞—Ä–∏—Ç—å –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏",
            "portions": 2,
            "ingredients": [
                {"name": "–Ø–π—Ü–∞", "quantity": 4, "unit": "pcs"},
                {"name": "–ü–æ–º–∏–¥–æ—Ä—ã", "quantity": 2, "unit": "pcs"},
                {"name": "–ü–µ—Ä–µ—Ü –±–æ–ª–≥–∞—Ä—Å–∫–∏–π", "quantity": 1, "unit": "pcs"},
                {"name": "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "quantity": 0.5, "unit": "pcs"},
                {"name": "–°–æ–ª—å", "quantity": 1, "unit": "tsp"},
                {"name": "–ú–æ–ª–æ–∫–æ", "quantity": 50, "unit": "ml"},
            ],
        },
        {
            "name": "–ö—É—Ä–∏–Ω—ã–π —Å—É–ø —Å –ª–∞–ø—à–æ–π",
            "description": "–ê—Ä–æ–º–∞—Ç–Ω—ã–π —Å—É–ø —Å –∫—É—Ä–∏—Ü–µ–π –∏ –æ–≤–æ—â–∞–º–∏",
            "cooking_time": 45,
            "difficulty": "medium",
            "cooking_method": "–í–∞—Ä–∫–∞",
            "instructions": "1. –°–≤–∞—Ä–∏—Ç—å –∫—É—Ä–∏–Ω—ã–π –±—É–ª—å–æ–Ω\n2. –î–æ–±–∞–≤–∏—Ç—å –æ–≤–æ—â–∏\n3. –î–æ–±–∞–≤–∏—Ç—å –ª–∞–ø—à—É\n4. –í–∞—Ä–∏—Ç—å –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏",
            "portions": 4,
            "ingredients": [
                {"name": "–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ", "quantity": 300, "unit": "g"},
                {"name": "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", "quantity": 3, "unit": "pcs"},
                {"name": "–ú–æ—Ä–∫–æ–≤—å", "quantity": 1, "unit": "pcs"},
                {"name": "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "quantity": 1, "unit": "pcs"},
                {"name": "–ú–∞–∫–∞—Ä–æ–Ω—ã", "quantity": 100, "unit": "g"},
                {"name": "–°–æ–ª—å", "quantity": 2, "unit": "tsp"},
                {"name": "–õ–∞–≤—Ä–æ–≤—ã–π –ª–∏—Å—Ç", "quantity": 2, "unit": "pcs"},
            ],
        },
        {
            "name": "–ì—Ä–µ—á–Ω–µ–≤–∞—è –∫–∞—à–∞ —Å –≥—Ä–∏–±–∞–º–∏",
            "description": "–ü–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –≥–∞—Ä–Ω–∏—Ä —Å –≥—Ä–∏–±–∞–º–∏ –∏ –ª—É–∫–æ–º",
            "cooking_time": 30,
            "difficulty": "easy",
            "cooking_method": "–¢—É—à–µ–Ω–∏–µ",
            "instructions": "1. –û–±–∂–∞—Ä–∏—Ç—å –≥—Ä–∏–±—ã —Å –ª—É–∫–æ–º\n2. –î–æ–±–∞–≤–∏—Ç—å –≥—Ä–µ—á–∫—É\n3. –ó–∞–ª–∏—Ç—å –≤–æ–¥–æ–π –∏ —Ç—É—à–∏—Ç—å –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏",
            "portions": 3,
            "ingredients": [
                {"name": "–ì—Ä–µ—á–∫–∞", "quantity": 200, "unit": "g"},
                {"name": "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "quantity": 1, "unit": "pcs"},
                {"name": "–ß–µ—Å–Ω–æ–∫", "quantity": 2, "unit": "pcs"},
                {"name": "–°–æ–ª—å", "quantity": 1, "unit": "tsp"},
                {"name": "–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ", "quantity": 30, "unit": "ml"},
            ],
        },
        {
            "name": "–°–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π",
            "description": "–õ–µ–≥–∫–∏–π –∏ –ø–æ–ª–µ–∑–Ω—ã–π —Å–∞–ª–∞—Ç",
            "cooking_time": 10,
            "difficulty": "easy",
            "cooking_method": "–°—ã—Ä–æ–µ–¥–µ–Ω–∏–µ",
            "instructions": "1. –ù–∞—Ä–µ–∑–∞—Ç—å –≤—Å–µ –æ–≤–æ—â–∏\n2. –ó–∞–ø—Ä–∞–≤–∏—Ç—å –º–∞—Å–ª–æ–º –∏ —Å–ø–µ—Ü–∏—è–º–∏\n3. –ü–µ—Ä–µ–º–µ—à–∞—Ç—å",
            "portions": 2,
            "ingredients": [
                {"name": "–ü–æ–º–∏–¥–æ—Ä—ã", "quantity": 2, "unit": "pcs"},
                {"name": "–û–≥—É—Ä—Ü—ã", "quantity": 2, "unit": "pcs"},
                {"name": "–ü–µ—Ä–µ—Ü –±–æ–ª–≥–∞—Ä—Å–∫–∏–π", "quantity": 1, "unit": "pcs"},
                {"name": "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "quantity": 0.5, "unit": "pcs"},
                {"name": "–°–æ–ª—å", "quantity": 1, "unit": "tsp"},
                {"name": "–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ", "quantity": 20, "unit": "ml"},
            ],
        },
        {
            "name": "–ó–∞–ø–µ—á–µ–Ω–Ω–∞—è –∫—É—Ä–∏—Ü–∞ —Å –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º",
            "description": "–°–æ—á–Ω–∞—è –∫—É—Ä–∏—Ü–∞ —Å —Ö—Ä—É—Å—Ç—è—â–∏–º –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º",
            "cooking_time": 60,
            "difficulty": "medium",
            "cooking_method": "–ó–∞–ø–µ–∫–∞–Ω–∏–µ",
            "instructions": "1. –ù–∞—Ç–µ—Ä–µ—Ç—å –∫—É—Ä–∏—Ü—É —Å–ø–µ—Ü–∏—è–º–∏\n2. –í—ã–ª–æ–∂–∏—Ç—å –Ω–∞ –ø—Ä–æ—Ç–∏–≤–µ–Ω—å —Å –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º\n3. –ó–∞–ø–µ–∫–∞—Ç—å –≤ –¥—É—Ö–æ–≤–∫–µ 45-60 –º–∏–Ω—É—Ç",
            "portions": 4,
            "ingredients": [
                {"name": "–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ", "quantity": 500, "unit": "g"},
                {"name": "–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", "quantity": 6, "unit": "pcs"},
                {"name": "–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", "quantity": 2, "unit": "pcs"},
                {"name": "–ß–µ—Å–Ω–æ–∫", "quantity": 4, "unit": "pcs"},
                {"name": "–°–æ–ª—å", "quantity": 2, "unit": "tsp"},
                {"name": "–ü–µ—Ä–µ—Ü —á–µ—Ä–Ω—ã–π", "quantity": 1, "unit": "tsp"},
            ],
        },
    ]

    recipes = {}
    for recipe_data in recipes_data:
        recipe, created = Recipe.objects.get_or_create(
            name=recipe_data["name"],
            defaults={
                "description": recipe_data["description"],
                "cooking_time": recipe_data["cooking_time"],
                "difficulty": recipe_data["difficulty"],
                "cooking_method": cooking_methods[recipe_data["cooking_method"]],
                "instructions": recipe_data["instructions"],
                "portions": recipe_data["portions"],
            },
        )
        recipes[recipe_data["name"]] = recipe

        if created:
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∫ —Ä–µ—Ü–µ–ø—Ç—É
            for ing_data in recipe_data["ingredients"]:
                RecipeIngredient.objects.create(
                    recipe=recipe,
                    ingredient=ingredients[ing_data["name"]],
                    quantity=ing_data["quantity"],
                )
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ä–µ—Ü–µ–ø—Ç: {recipe_data['name']}")

    # 6. –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    print("üîÑ –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è...")

    today = date.today()
    start_of_week = today - timedelta(days=today.weekday())  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫

    meal_types = ["breakfast", "lunch", "dinner"]
    meal_names = {"breakfast": "–ó–∞–≤—Ç—Ä–∞–∫", "lunch": "–û–±–µ–¥", "dinner": "–£–∂–∏–Ω"}

    # –†–µ—Ü–µ–ø—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏
    breakfast_recipes = [recipes["–û–º–ª–µ—Ç —Å –æ–≤–æ—â–∞–º–∏"]]
    lunch_recipes = [
        recipes["–ö—É—Ä–∏–Ω—ã–π —Å—É–ø —Å –ª–∞–ø—à–æ–π"],
        recipes["–ì—Ä–µ—á–Ω–µ–≤–∞—è –∫–∞—à–∞ —Å –≥—Ä–∏–±–∞–º–∏"],
    ]
    dinner_recipes = [
        recipes["–°–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π"],
        recipes["–ó–∞–ø–µ—á–µ–Ω–Ω–∞—è –∫—É—Ä–∏—Ü–∞ —Å –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º"],
    ]

    for day in range(7):  # –ù–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é
        current_date = start_of_week + timedelta(days=day)

        for meal_type in meal_types:
            # –°–æ–∑–¥–∞–µ–º –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –ø—Ä–∏–µ–º –ø–∏—â–∏
            meal_plan, created = MealPlan.objects.get_or_create(
                user=user, date=current_date, meal_type=meal_type, defaults={}
            )

            if created:
                # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏
                if meal_type == "breakfast":
                    recipe_choice = random.choice(breakfast_recipes)
                elif meal_type == "lunch":
                    recipe_choice = random.choice(lunch_recipes)
                else:  # dinner
                    recipe_choice = random.choice(dinner_recipes)

                # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç –≤ –ø–ª–∞–Ω
                RecipeMealPlan.objects.create(
                    meal_plan=meal_plan,
                    recipe=recipe_choice,
                    portions=random.randint(2, 4),
                    order=1,
                )

                print(
                    f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–ª–∞–Ω: {current_date} - {meal_names[meal_type]} - {recipe_choice.name}"
                )

    # 7. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫
    print("üîÑ –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–∫–∏ –ø–æ–∫—É–ø–æ–∫...")

    # –°–ø–∏—Å–æ–∫ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    shopping_list, created = ShoppingList.objects.get_or_create(
        user=user,
        period_start=start_of_week,
        period_end=start_of_week + timedelta(days=6),
        defaults={"name": f"–ü–æ–∫—É–ø–∫–∏ –Ω–∞ –Ω–µ–¥–µ–ª—é {start_of_week}"},
    )

    if created:
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –≤ —Å–ø–∏—Å–æ–∫
        sample_ingredients = [
            ("–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", 10, "pcs"),
            ("–ú–æ—Ä–∫–æ–≤—å", 5, "pcs"),
            ("–õ—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π", 3, "pcs"),
            ("–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ", 500, "g"),
            ("–ú–æ–ª–æ–∫–æ", 1000, "ml"),
            ("–Ø–π—Ü–∞", 10, "pcs"),
            ("–°—ã—Ä", 200, "g"),
        ]

        for i, (ing_name, quantity, unit) in enumerate(sample_ingredients):
            ShoppingListItem.objects.create(
                shopping_list=shopping_list,
                ingredient=ingredients[ing_name],
                quantity=quantity,
                unit=unit,
                category=ingredients[ing_name].category,
                order=i,
            )

        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫: {shopping_list.name}")

    # 8. –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω —Å–ø–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫
    template, created = ShoppingListTemplate.objects.get_or_create(
        user=user,
        name="–ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
        defaults={"description": "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏", "is_default": True},
    )

    if created:
        template_items = [
            ("–•–ª–µ–±", 1, "pcs"),
            ("–ú–æ–ª–æ–∫–æ", 1000, "ml"),
            ("–Ø–π—Ü–∞", 10, "pcs"),
            ("–°—ã—Ä", 200, "g"),
            ("–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ", 500, "ml"),
            ("–°–æ–ª—å", 1, "pcs"),
        ]

        for i, (ing_name, quantity, unit) in enumerate(template_items):
            # –ï—Å–ª–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–ü—Ä–æ—á–µ–µ"
            if ing_name not in ingredients:
                ingredient = Ingredient.objects.create(
                    name=ing_name, category=categories["–ü—Ä–æ—á–µ–µ"], default_unit=unit
                )
                ingredients[ing_name] = ingredient

            TemplateItem.objects.create(
                template=template,
                ingredient=ingredients[ing_name],
                quantity=quantity,
                unit=unit,
                order=i,
            )

        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω —Å–ø–∏—Å–∫–∞: {template.name}")

    print("\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.objects.count()}")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {IngredientCategory.objects.count()}")
    print(f"   –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤: {Ingredient.objects.count()}")
    print(f"   –†–µ—Ü–µ–ø—Ç–æ–≤: {Recipe.objects.count()}")
    print(f"   –ü–ª–∞–Ω–æ–≤ –ø–∏—Ç–∞–Ω–∏—è: {MealPlan.objects.count()}")
    print(f"   –°–ø–∏—Å–∫–æ–≤ –ø–æ–∫—É–ø–æ–∫: {ShoppingList.objects.count()}")
    print(f"   –®–∞–±–ª–æ–Ω–æ–≤: {ShoppingListTemplate.objects.count()}")

    print("\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
    print(f"   –õ–æ–≥–∏–Ω: testuser")
    print(f"   –ü–∞—Ä–æ–ª—å: testpassword123")
    print(f"   API: http://127.0.0.1:8000/api/")
    print(f"   –ê–¥–º–∏–Ω–∫–∞: http://127.0.0.1:8000/admin/")


if __name__ == "__main__":
    create_test_data()
